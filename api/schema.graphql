scalar GraphQLDate

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

type Issue {
  id: Int!
  title: String!
  description: String
  status: StatusType!
  owner: String
  effort: Int
  created: GraphQLDate!
  due: GraphQLDate
}

type IssueCounts {
  owner: String!,
  New: Int,
  Assigned: Int,
  Fixed: Int,
  Closed: Int
}

type IssueListWithPages {
  issues: [Issue!]!
  pages: Int!
}

input IssueInputs {
  title: String!
  description: String
  "Optional. Set's 'New' when not provided."
  status: StatusType = New
  owner: String
  effort: Int
  due: GraphQLDate
}

"""Inputs for issueUpdate: all are optional. Whichever specified well be set to the given value,
undefined fields will remain unmodified.
"""
input IssueUpdateInputs {
  title: String,
  description: String,
  status: StatusType,
  owner: String,
  effort: Int,
  due: GraphQLDate
}

# Top level declarations

type Query {
  about: String!
  issuesList(
    status: StatusType
    effortMin: Int
    effortMax: Int
    page: Int = 1
  ): IssueListWithPages
  issue(id: Int!): Issue!
  issueCounts(
    status: StatusType
    effortMin: Int
    effortMax: Int
  ): [IssueCounts!]!
}
type Mutation {
  setAboutMessage(message: String!): String
  addIssue(issue: IssueInputs!): Issue!
  updateIssue(id: Int!, changes: IssueUpdateInputs!): Issue!
  deleteIssue(id: Int!): Boolean!
}
